<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cube.wechat.thirdapp.mapper.RmExternalStatisticsNumMapper">

    <resultMap id="BaseResultMap" type="com.cube.wechat.thirdapp.entiy.RmExternalStatisticsNum">
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="external_user_id" jdbcType="VARCHAR" property="externalUserId" />
        <result column="data_time" jdbcType="TIMESTAMP" property="dataTime" />
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
        <result column="is_deleted_by_person" jdbcType="INTEGER" property="isDeletedByPerson" />
        <result column="is_deleted_by_contact" jdbcType="INTEGER" property="isDeletedByContact" />
        <result column="is_lost" jdbcType="INTEGER" property="isLost" />
        <result column="corp_id" jdbcType="VARCHAR" property="corpId" />
    </resultMap>
    <select id="selectExternalStatisticsNum" parameterType="com.cube.wechat.thirdapp.entiy.RmExternalStatisticsNum" resultMap="BaseResultMap">
        SELECT *FROM rm_external_statistics_num WHERE external_user_id=#{externalUserId} and user_id=#{userId} and corp_id=#{corpId} limit 1
    </select>
    <update id="updateExternalStatisticsNum" parameterType="com.cube.wechat.thirdapp.entiy.RmExternalStatisticsNum">
        UPDATE rm_external_statistics_num SET
        <if test="dataTime != null">
            data_time = #{dataTime,jdbcType=TIMESTAMP},
        </if>
        <if test="addTime != null">
            add_time = #{addTime,jdbcType=TIMESTAMP},
        </if>
        is_deleted_by_person=#{isDeletedByPerson} ,
        is_deleted_by_contact=#{isDeletedByContact},
        is_lost=#{isLost}
        WHERE external_user_id=#{externalUserId} and user_id=#{userId} and corp_id=#{corpId}
    </update>
    <delete id="deleteExternalStatisticsNumByUserId" parameterType="java.lang.String">
        DELETE FROM rm_external_statistics_num WHERE USER_ID=#{userId} and corp_id=#{corpId}
    </delete>
    <insert id="insertSelective" parameterType="com.cube.wechat.thirdapp.entiy.RmExternalStatisticsNum">
        insert into rm_external_statistics_num
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="externalUserId != null">
                external_user_id,
            </if>
            <if test="dataTime != null">
                data_time,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="isDeletedByPerson != null">
                is_deleted_by_person,
            </if>
            <if test="isDeletedByContact != null">
                is_deleted_by_contact,
            </if>
            <if test="isLost != null">
                is_lost,
            </if>
            <if test="corpId != null">
                corp_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="externalUserId != null">
                #{externalUserId,jdbcType=VARCHAR},
            </if>
            <if test="dataTime != null">
                #{dataTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addTime != null">
                #{addTime},
            </if>
            <if test="isDeletedByPerson != null">
                #{isDeletedByPerson,jdbcType=INTEGER},
            </if>
            <if test="isDeletedByContact != null">
                #{isDeletedByContact,jdbcType=INTEGER},
            </if>
            <if test="isLost != null">
                #{isLost,jdbcType=INTEGER},
            </if>
            <if test="corpId != null">
                #{corpId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
 <!-- <select id="queryResidentDataOfPersonnelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT
          'NewToday' AS result_type,
          COUNT(*) AS result_value
      FROM
          rm_external_statistics_num
      WHERE
          DATE ( add_time ) = CURDATE()
        AND is_lost=0
        AND user_id IN (${userIds})
        AND corp_id = #{corpId}
      GROUP BY
          user_id UNION ALL
      SELECT
          'LossToday' AS result_type,
          COUNT(*) AS result_value
      FROM
          rm_external_statistics_num
      WHERE
          DATE ( data_time ) = CURDATE()
        AND is_lost = 1
        AND user_id IN (${userIds})
        AND corp_id = #{corpId}
      GROUP BY user_id  UNION ALL
      SELECT
          'TotalCount' AS result_type,
          COUNT(*) AS result_value
      FROM
          rm_external_statistics_num
      WHERE
          user_id IN (${userIds})
        AND corp_id = #{corpId}
        AND is_lost = 0
      GROUP BY
          user_id
  </select>-->
   <select id="queryResidentDataOfPersonnelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
       SELECT
           CASE
               WHEN is_lost = 0 AND DATE(add_time) = CURDATE() THEN 'NewToday'
               WHEN is_lost = 1 AND DATE(data_time) = CURDATE() THEN 'LossToday'
               WHEN is_lost = 0 THEN 'TotalCount'
               ELSE ''
               END AS result_type,
           COUNT(*) AS result_value
       FROM rm_external_statistics_num
       WHERE
           user_id IN (${userIds})
         AND corp_id =#{corpId}
       GROUP BY CASE
                    WHEN is_lost = 0 AND DATE(add_time) = CURDATE() THEN 'NewToday'
                    WHEN is_lost = 1 AND DATE(data_time) = CURDATE() THEN 'LossToday'
                    WHEN is_lost = 0 THEN 'TotalCount'
                    ELSE ''
                    END
  </select>



    <select id="queryResidentListByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        rei.remark,
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id=#{corpId}
        AND reifc.control_name in ('姓名','手机号','单位')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE rsn.is_lost=0
        AND rsn.user_id in  (${userIds})
        AND rsn.corp_id=#{corpId}
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or info_value LIKE  CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="isUntagged!=null and isUntagged==1">
            AND rel.label_id IS NULL
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        <if test="companyName!=null and companyName!=''">
            AND  info_value LIKE  CONCAT('%',#{companyName},'%')
        </if>
        group by rsn.user_id,rsn.external_user_id
        order by rsn.add_time  DESC
    </select>
    <select id="queryResidentListNotLabelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT( rsn.add_time, '%Y-%m-%d' ) AS data_time,
            rsn.external_user_id,
            rsn.user_id
        FROM
            rm_external_statistics_num rsn
        WHERE
            external_user_id NOT IN (
            SELECT rsn.external_user_id FROM rm_external_statistics_num rsn
                INNER JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
                WHERE rsn.is_lost = 0  AND rsn.corp_id = #{corpId} GROUP BY rsn.external_user_id
            )
          AND rsn.is_lost=0
          AND rsn.user_id in (${userIds})
          AND rsn.corp_id=#{corpId}
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        GROUP BY
            rsn.user_id,
            rsn.external_user_id
        ORDER BY
            rsn.add_time DESC
    </select>


    <select id="queryNewTodayResidentListByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
            rm_external_statistics_num rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id  AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id= #{corpId}
        AND reifc.control_name in ('姓名','手机号','单位')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE
        rsn.user_id IN (${userIds})
          AND rsn.corp_id = #{corpId}
          AND rsn.is_lost = 0
          AND DATE ( rsn.add_time ) = CURDATE()
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or info_value LIKE  CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="isUntagged!=null and isUntagged==1">
            AND rel.label_id IS NULL
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>


    <select id="queryNewTodayResidentListNotLabelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num rsn
        WHERE
        rsn.external_user_id NOT IN (
        SELECT rsn.external_user_id FROM rm_external_statistics_num rsn
        INNER JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
        WHERE rsn.is_lost = 0 AND rsn.corp_id = #{corpId} GROUP BY rsn.external_user_id
        )
        AND rsn.user_id IN (${userIds})
        AND rsn.corp_id = #{corpId}
        AND rsn.is_lost = 0
        AND DATE ( rsn.data_time ) = CURDATE()
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>

    <select id="queryLossTodayResidentListByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
            rsn.external_user_id,
            rsn.user_id
        FROM
            rm_external_statistics_num  rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id  AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id=#{corpId}
        AND reifc.control_name  in ('姓名','手机号','单位')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE
        rsn.user_id IN (${userIds})
          AND rsn.corp_id = #{corpId}
          AND rsn.is_lost = 1
          AND DATE ( rsn.data_time ) = CURDATE()
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or info_value LIKE  CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="isUntagged!=null and isUntagged==1">
            AND rel.label_id IS NULL
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>

    <select id="queryLossTodayResidentListNotLabelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num  rsn
        WHERE
        rsn.external_user_id NOT IN (
        SELECT rsn.external_user_id FROM rm_external_statistics_num rsn
        INNER JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
        WHERE rsn.is_lost = 0 AND rsn.corp_id = #{corpId} GROUP BY rsn.external_user_id
        )
        AND rsn.user_id IN (${userIds})
        AND rsn.corp_id = #{corpId}
        AND rsn.is_lost = 1
        AND DATE ( rsn.data_time ) = CURDATE()
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>

    <select id="queryDeletedResidentListByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
            rsn.external_user_id,
            rsn.user_id
        FROM
            rm_external_statistics_num rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id  AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id= #{corpId}
        AND reifc.control_name  in ('姓名','手机号','单位')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE
        rsn.user_id IN (${userIds})
          AND rsn.corp_id = #{corpId}
          AND rsn.is_deleted_by_contact = 1
          AND rsn.is_deleted_by_person=0
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or info_value LIKE  CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="isUntagged!=null and isUntagged==1">
            AND rel.label_id IS NULL
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>

    <select id="queryDeletedResidentListNotLabelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num rsn
        WHERE
        rsn.external_user_id NOT IN (
        SELECT rsn.external_user_id FROM rm_external_statistics_num rsn
        INNER JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
        WHERE rsn.is_lost = 0 AND rsn.corp_id = #{corpId} GROUP BY rsn.external_user_id
        )
        AND rsn.user_id IN (${userIds})
        AND rsn.corp_id = #{corpId}
        AND rsn.is_deleted_by_contact = 1
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>

    <select id="queryMutualDeletionResidentListByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
            rm_external_statistics_num rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id  AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id= #{corpId}
        AND reifc.control_name   in ('姓名','手机号','单位')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE
            rsn.user_id IN (${userIds})
          AND rsn.corp_id = #{corpId}
          AND rsn.is_deleted_by_contact = 1
          AND rsn.is_deleted_by_person = 1
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or info_value LIKE  CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="isUntagged!=null and isUntagged==1">
            AND rel.label_id IS NULL
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>
    <select id="queryMutualDeletionResidentListNotLabelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num rsn
        WHERE
        rsn.external_user_id NOT IN (
        SELECT rsn.external_user_id FROM rm_external_statistics_num rsn
        INNER JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
        WHERE rsn.is_lost = 0 AND rsn.corp_id = #{corpId} GROUP BY rsn.external_user_id
        )
        AND rsn.user_id IN (${userIds})
        AND rsn.corp_id = #{corpId}
        AND rsn.is_deleted_by_contact = 1
        AND rsn.is_deleted_by_person = 1
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>
    <select id="queryLosingFriendlyRelationshipsByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
            rm_external_statistics_num rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id  AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id= #{corpId}
        AND reifc.control_name in ('姓名','手机号','单位')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE
        rsn.user_id IN (${userIds})
          AND rsn.corp_id = #{corpId}
          AND rsn.is_deleted_by_person=1
          AND rsn.is_deleted_by_contact=0
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or info_value LIKE  CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="isUntagged!=null and isUntagged==1">
            AND rel.label_id IS NULL
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>
    <select id="queryLosingFriendlyRelationshipsNotLabelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num rsn
        WHERE
        rsn.external_user_id NOT IN (
        SELECT rsn.external_user_id FROM rm_external_statistics_num rsn
        INNER JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
        WHERE rsn.is_lost = 0 AND rsn.corp_id = #{corpId} GROUP BY rsn.external_user_id
        )
        AND rsn.user_id IN (${userIds})
        AND rsn.corp_id = #{corpId}
        AND rsn.is_deleted_by_person=1
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>
    <select id="queryThereIsAFriendRelationshipByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
            rm_external_statistics_num rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id  AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id=#{corpId}
        AND reifc.control_name in ('姓名','手机号','单位')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE
        rsn.user_id IN (${userIds})
          AND rsn.corp_id = #{corpId}
          AND rsn.is_deleted_by_contact=0
          AND rsn.is_deleted_by_person=0
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or info_value LIKE  CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="isUntagged!=null and isUntagged==1">
            AND rel.label_id IS NULL
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>

    <select id="queryThereIsAFriendRelationshipNotLabelByUserIdList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num rsn
        WHERE
        rsn.external_user_id NOT IN (
        SELECT rsn.external_user_id FROM rm_external_statistics_num rsn
        INNER JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
        WHERE rsn.is_lost = 0 AND rsn.corp_id = #{corpId} GROUP BY rsn.external_user_id
        )
        AND rsn.user_id IN (${userIds})
        AND rsn.corp_id = #{corpId}
        AND rsn.is_deleted_by_contact=0
        AND rsn.is_deleted_by_person=0
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        ORDER BY rsn.add_time DESC
    </select>


    <select id="queryUserResidentLabelAssociationDataByUserId" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            'NewToday' AS result_type,
            rel.label_id AS id
        FROM
            rm_external_statistics_num resn
                INNER JOIN rm_external_label rel  ON resn.external_user_id = rel.external_user_id
                INNER JOIN rm_label rl ON rl.id = rel.label_id
        WHERE
            rl.is_delete = 0
          AND resn.is_lost = 0
          AND resn.user_id=#{userId}
          AND rel.corp_id=#{corpId}
          AND DATE ( add_time ) = CURDATE() UNION ALL
        SELECT
            'LossToday' AS result_type,
            rel.label_id AS id
        FROM
            rm_external_statistics_num resn
                INNER JOIN rm_external_label rel  ON resn.external_user_id = rel.external_user_id
                INNER JOIN rm_label rl ON rl.id = rel.label_id
        WHERE
            rl.is_delete = 0
          AND resn.is_lost = 1
          AND resn.user_id=#{userId}
          AND rel.corp_id=#{corpId}
          AND DATE ( data_time ) = CURDATE() UNION ALL
        SELECT
            'NewToday' AS result_type,
            user_id AS id
        FROM
            rm_external_statistics_num
        WHERE
            is_lost = 0
          AND user_id = #{userId}
          AND corp_id=#{corpId}
          AND DATE ( add_time ) = CURDATE()
        GROUP BY
            external_user_id UNION ALL
        SELECT
            'LossToday' AS result_type,
            user_id AS id
        FROM
            rm_external_statistics_num
        WHERE
            is_lost = 1
          AND user_id = #{userId}
          AND corp_id=#{corpId}
          AND DATE ( data_time ) = CURDATE()
        GROUP BY
            external_user_id
    </select>
 <!--   <select id="">
        SELECT
            DATE_FORMAT( rsn.add_time, '%Y-%m-%d' ) AS data_time,
            rsn.external_user_id,
            rsn.user_id
        FROM
            rm_external_statistics_num rsn
                LEFT JOIN rm_external_label rel ON rel.external_user_id = rsn.external_user_id
                AND rel.user_id = rsn.user_id
        WHERE
            rsn.is_lost = 0
          AND rsn.user_id = 'woWydoBgAAhoDLe-TELsW6N1f7Mzo4WQ'
          AND rsn.corp_id = 'wpWydoBgAA3g2VJ5-YSwAcT2DZWA4&#45;&#45;w'
        GROUP BY
            rsn.external_user_id
        ORDER BY
            rsn.add_time DESC
    </select>-->

    <select id="selectExternalNumberOfTimesAdded" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
            count(DISTINCT resn.user_id) as addNum
        FROM
            rm_external_statistics_num resn
                INNER JOIN qywx_user_path qup ON resn.corp_id = resn.corp_id
                AND resn.user_id= qup.user_id
        WHERE
            resn.external_user_id =  #{externalUserId}
          AND resn.corp_id = #{corpId}
          AND resn.is_lost = 0
    </select>
    <select id="selectHowManyPeopleAddedItToByExternalUserId" parameterType="java.lang.String" resultType="java.lang.String">

        SELECT
            resn.user_id
        FROM
            rm_external_statistics_num resn
                LEFT JOIN qywx_user_path qup ON resn.corp_id = resn.corp_id
                AND resn.user_id= qup.user_id
        WHERE
            resn.external_user_id =  #{externalUserId}
          AND resn.corp_id = #{corpId}
          AND resn.is_lost = 0
    </select>
    <select id="selectExternalUserIdAndCorpId"
            resultMap="BaseResultMap">
        SELECT
            *
        FROM
            rm_external_statistics_num
        WHERE
            external_user_id = #{externalUserId}
          AND corp_id = #{corpId}
          AND is_lost = 0
    </select>
    <select id="selectqueryDataFromVariousOrganizations" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            qcd.department_id as id,
            qcd.department_full_path as fullPath,
            qcd.department_parent_id as parentId,
            s1.userStatus,
            1 as dataType,
            qcd.corp_id as corpId,
            IFNULL( SUM( s1.totalCount ), 0 ) AS totalCount,
            IFNULL( SUM( s1.newToday ), 0 ) AS newToday,
            IFNULL( SUM( s1.lossToday ), 0 ) AS lossToday
        FROM
            qywx_corp_department_new qcd
                LEFT JOIN (
                SELECT
                    qup.corp_id,
                    qup.user_full_paths,
                    qup.user_id,
                    qup.userStatus,
                    IFNULL( SUM( is_lost = 0 ), 0 ) AS totalCount,
                    IFNULL( SUM( is_lost = 0 AND DATE ( add_time ) = CURDATE()), 0 ) AS newToday,
                    IFNULL( SUM( is_lost = 1 AND DATE ( data_time ) = CURDATE()), 0 ) AS lossToday
                FROM
                    qywx_user_path qup
                        LEFT JOIN rm_external_statistics_num resn ON resn.corp_id = qup.corp_id
                        AND resn.user_id = qup.user_id
                WHERE
                    qup.corp_id = #{corpId}
                GROUP BY
                    qup.user_id
            ) s1 ON s1.corp_id = qcd.corp_id
                AND s1.user_full_paths LIKE CONCAT( '%>', qcd.department_id, '>%' )
        WHERE
            qcd.corp_id =#{corpId}
          AND qcd.department_parent_id =#{departmentId}
        GROUP BY
            qcd.department_id

        UNION ALL
        SELECT
            qup.user_id as id,
            qup.user_full_paths as fullPath,
            #{departmentId} as parenId,
            qup.userStatus,
            2 as dataType,
            qup.corp_id as corpId,
            IFNULL( SUM( is_lost = 0 ), 0 ) AS totalCount,
            IFNULL( SUM( is_lost = 0 AND DATE ( add_time ) = CURDATE()), 0 ) AS newToday,
            IFNULL( SUM( is_lost = 1 AND DATE ( data_time ) = CURDATE()), 0 ) AS lossToday
        FROM
            qywx_user_path qup
                LEFT JOIN rm_external_statistics_num resn ON resn.corp_id = qup.corp_id
                AND resn.user_id = qup.user_id
        WHERE
            qup.corp_id =#{corpId}
          AND (qup.user_full_paths=CONCAT('>',#{departmentId},'>') OR qup.user_full_paths LIKE CONCAT('%>',#{departmentId},'>,%'))
        GROUP BY
            qup.user_id
    </select>


    <select id="selectDepartmentStaticsNumById" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            IFNULL( SUM( resn.is_lost = 0 ), 0 ) AS totalCount,
            IFNULL( SUM( resn.is_lost = 0 AND DATE ( resn.add_time ) = CURDATE()), 0 ) AS newToday,
            IFNULL( SUM( resn.is_lost = 1 AND DATE ( resn.data_time ) = CURDATE()), 0 ) AS lossToday
        FROM
            qywx_user_path qup
                LEFT JOIN rm_external_statistics_num resn ON resn.corp_id = qup.corp_id
                AND qup.user_id = resn.user_id
        WHERE
            qup.corp_id =#{corpId}
          AND qup.user_full_paths LIKE CONCAT('%>', #{departmentId}, '>%');
    </select>



    <select id="selectAllNum" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            IFNULL( s1.totalCount, 0 ) AS totalCount,
            s1.corp_id,
            IFNULL( s2.newToday, 0 ) AS newToday,
            IFNULL( s3.lossToday, 0 ) AS lossToday
        FROM
            ( SELECT COUNT(*) AS "totalCount", corp_id FROM rm_external_statistics_num WHERE is_lost = 0  AND user_id IN (${userIds}) GROUP BY corp_id ) s1
                LEFT JOIN ( SELECT COUNT(*) AS "newToday", corp_id FROM rm_external_statistics_num WHERE is_lost = 0 AND user_id IN (${userIds})  AND DATE ( add_time ) = CURDATE() GROUP BY corp_id ) s2 ON s1.corp_id = s2.corp_id
            LEFT JOIN ( SELECT COUNT(*) AS "lossToday", corp_id FROM rm_external_statistics_num WHERE is_lost = 1 AND user_id IN (${userIds}) AND DATE ( data_time ) = CURDATE() GROUP BY corp_id ) s3 ON s3.corp_id = s1.corp_id
        WHERE
            s1.corp_id in (${corpId})
    </select>
    <select id="selectAllNumByParentId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            IFNULL( SUM( is_lost = 0 ), 0 ) AS totalCount,
            IFNULL( SUM( is_lost = 0 AND DATE ( add_time ) = CURDATE()), 0 ) AS newToday,
            IFNULL( SUM( is_lost = 1 AND DATE ( data_time ) = CURDATE()), 0 ) AS lossToday
        FROM
            rm_external_statistics_num resn
                INNER JOIN (
                SELECT DISTINCT
                    user_id
                FROM
                    (
                        SELECT
                            user_id
                        FROM
                            qywx_user_department qud
                                INNER JOIN qywx_corp_department qcd ON qcd.department_id = qud.department_id
                                AND qud.corp_id = qcd.corp_id
                                AND qcd.full_path LIKE CONCAT(#{fullPath},'%')
                        WHERE
                            qud.corp_id =  #{corpId} UNION ALL
                        SELECT
                            user_id
                        FROM
                            qywx_user_department
                        WHERE
                            department_id = #{departmentId}
                          AND corp_id = #{corpId}
                    ) s
            ) s ON s.user_id = resn.user_id
        WHERE
            resn.corp_id = #{corpId}
    </select>

   <!-- <select id="selectCorpAllNum" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            IFNULL( s1.totalCount, 0 ) AS totalCount,
            s1.corp_id,
            IFNULL( s2.newToday, 0 ) AS newToday,
            IFNULL( s3.lossToday, 0 ) AS lossToday
        FROM
            ( SELECT COUNT(*) AS "totalCount", corp_id FROM rm_external_statistics_num WHERE is_lost = 0  AND user_id IN (${userIds}) GROUP BY corp_id ) s1
                LEFT JOIN ( SELECT COUNT(*) AS "newToday", corp_id FROM rm_external_statistics_num WHERE is_lost = 0 AND user_id IN (${userIds})  AND DATE ( add_time ) = CURDATE() GROUP BY corp_id ) s2 ON s1.corp_id = s2.corp_id
            LEFT JOIN ( SELECT COUNT(*) AS "lossToday", corp_id FROM rm_external_statistics_num WHERE is_lost = 1 AND user_id IN (${userIds}) AND DATE ( data_time ) = CURDATE() GROUP BY corp_id ) s3 ON s3.corp_id = s2.corp_id
        WHERE
            s1.corp_id in (${corpId})
    </select>-->
        <select id="selectCorpAllNum" parameterType="java.lang.String" resultType="java.util.Map">
            SELECT
                corp_id,
                SUM(is_lost = 0) AS totalCount,
                SUM(is_lost = 0 AND DATE(add_time) = CURDATE()) AS newToday,
                SUM(is_lost = 1 AND DATE(data_time) = CURDATE()) AS lossToday
            FROM rm_external_statistics_num
            WHERE user_id IN  (${userIds})
              AND corp_id IN (${corpId})
            GROUP BY corp_id
    </select>

    <select id="selectExternalNumByCorpId" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            qup.corp_id as corpId,
            IFNULL( SUM( resn.is_lost = 0 ), 0 ) AS totalCount,
            IFNULL( SUM( resn.is_lost = 0 AND DATE ( resn.add_time ) = CURDATE()), 0 ) AS newToday,
            IFNULL( SUM( resn.is_lost = 1 AND DATE ( resn.data_time ) = CURDATE()), 0 ) AS lossToday
        FROM
            qywx_user_path qup
                LEFT JOIN rm_external_statistics_num resn ON resn.corp_id = qup.corp_id
                AND qup.user_id = resn.user_id
        WHERE
            qup.corp_id =#{corpId}
    </select>

    <select id="selectRangeDataStaticsDataNum" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            qrd.range_id as id,
            qrd.parent_id as parentId,
            qrd.data_type as dataType,
            qrd.corp_id as corpId,
            IFNULL( SUM( s1.totalCount ), 0 ) AS totalCount,
            IFNULL( SUM( s1.lossToday ), 0 ) AS lossToday,
            IFNULL( SUM( s1.newToday ), 0 ) AS newToday
        FROM
            user_range_data qrd
                LEFT JOIN (
                SELECT
                    qup.corp_id,
                    qup.user_full_paths,
                    qup.user_id,
                    IFNULL( SUM( is_lost = 0 ), 0 ) AS totalCount,
                    IFNULL( SUM( is_lost = 0 AND DATE ( add_time ) = CURDATE()), 0 ) AS newToday,
                    IFNULL( SUM( is_lost = 1 AND DATE ( data_time ) = CURDATE()), 0 ) AS lossToday
                FROM
                    qywx_user_path qup
                        LEFT JOIN rm_external_statistics_num resn ON resn.corp_id = qup.corp_id
                        AND resn.user_id = qup.user_id
                WHERE
                    qup.corp_id = #{corpId}
                GROUP BY
                    qup.user_id
            ) s1 ON s1.corp_id = qrd.corp_id
                AND  (s1.user_full_paths LIKE CONCAT( '%>', qrd.range_id, '>%') or
                      s1.user_id=qrd.range_id
                        )
        WHERE
            qrd.corp_id = #{corpId}
          AND qrd.user_id=#{userId}
          AND qrd.parent_id =#{departmentId}
        GROUP BY
            qrd.range_id
        order by data_type
    </select>
    <select id="selectRangeDataAllById" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            qup.corp_id as corpId,
            IFNULL( SUM( resn.is_lost = 0 ), 0 ) AS totalCount,
            IFNULL( SUM( resn.is_lost = 0 AND DATE ( resn.add_time ) = CURDATE()), 0 ) AS newToday,
            IFNULL( SUM( resn.is_lost = 1 AND DATE ( resn.data_time ) = CURDATE()), 0 ) AS lossToday
        FROM
            qywx_user_path qup
                INNER JOIN user_range_data urd on urd.range_id=qup.user_id
                AND urd.corp_id=qup.corp_id
                LEFT JOIN rm_external_statistics_num resn ON resn.corp_id = qup.corp_id
                AND qup.user_id = resn.user_id
        WHERE
            qup.corp_id =#{corpId}
          AND urd.user_id=#{userId}
          AND qup.user_full_paths LIKE CONCAT('%>',#{departmentId}, '>%');
    </select>
    <select id="selectNotHaveLabelNewToadyNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT
            COUNT( resn.external_user_id ) AS num
        FROM
            rm_external_statistics_num resn
        WHERE
            resn.external_user_id NOT IN (
                SELECT
                    external_user_id
                FROM
                    rm_external_label rel
                        INNER JOIN rm_label rl ON rl.id = rel.label_id
                WHERE
                    rl.is_delete = 0
                  AND rel.user_id = #{userId}
                  AND rel.corp_id = #{corpId}
                GROUP BY
                    external_user_id
            )
          AND  is_lost=0
          AND DATE(add_time)=CURRENT_DATE()
          AND resn.user_id = #{userId}
          AND resn.corp_id =  #{corpId}
    </select>
    <select id="selectNotHaveLabelNewToadyLossNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT
            COUNT( resn.external_user_id ) AS num
        FROM
            rm_external_statistics_num resn
        WHERE
            resn.external_user_id NOT IN (
                SELECT
                    external_user_id
                FROM
                    rm_external_label rel
                        INNER JOIN rm_label rl ON rl.id = rel.label_id
                WHERE
                    rl.is_delete = 0
                  AND rel.user_id = #{userId}
                  AND rel.corp_id = #{corpId}
                GROUP BY
                    external_user_id
            )
          AND  is_lost=1
          AND DATE(data_time)=CURRENT_DATE()
          AND resn.user_id = #{userId}
          AND resn.corp_id =  #{corpId}
    </select>
    <select id="queryExternalByCorpIdAndExternalUserId" resultMap="BaseResultMap">
        SELECT
            *
        FROM
            rm_external_statistics_num
        WHERE
             corp_id= #{corpId}
          AND external_user_id = #{externalUserId}
        ORDER BY add_time DESC

    </select>
    <select id="selectExternalUserIdByExternalUserId" resultType="java.lang.String">
        SELECT
            user_id
        FROM
            rm_external_statistics_num
        WHERE
            external_user_id = #{externalUserId}
          AND corp_id = #{corpId}
          AND is_lost = 0
        ORDER BY add_time DESC limit 1
    </select>
    <select id="selectAllExternalUserIdByCorpId" resultType="java.lang.String">
        SELECT
            external_user_id
        FROM
            rm_external_statistics_num
        WHERE
            corp_id = #{corpId}
          AND is_lost = 0
        GROUP BY
            external_user_id
    </select>
    <select id="selectExternalFriends" resultMap="BaseResultMap">
        SELECT *
        FROM rm_external_statistics_num
        WHERE is_deleted_by_person = 0
          AND is_deleted_by_contact = 0
          AND external_user_id = #{externalUserId}
          AND corp_id = #{corpId}
    </select>
    <select id="selectExternalFriendsNum" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM rm_external_statistics_num
        WHERE is_deleted_by_person = 0
          AND is_deleted_by_contact = 0
          AND external_user_id = #{externalUserId}
          AND corp_id = #{corpId}
        AND is_lost = 0
        AND user_id = #{userId}
    </select>
    <select id="selectAddExternalByCorpId" resultType="java.lang.Long">
        SELECT COUNT(*) FROM
            (SELECT
                 *
             FROM
                 `rm_external_statistics_num`
             WHERE
                 corp_id = #{corpId}
               AND is_lost = 0
             GROUP BY
                 external_user_id
                    ,user_id) AS t1
    </select>
    <select id="selectLossExternalByCorpId" resultType="java.lang.Long">
        SELECT COUNT(*) FROM
            (SELECT
                 *
             FROM
                 `rm_external_statistics_num`
             WHERE
                 corp_id = #{corpId}
               AND is_lost = 1
               AND data_time = CURRENT_DATE()
        GROUP BY
            external_user_id
            ,user_id) AS num
    </select>
    <select id="selectNewExternalByCorpId" resultType="java.lang.Long">
        SELECT COUNT(*) FROM
            (SELECT
                 *
             FROM
                 `rm_external_statistics_num`
             WHERE
                 corp_id = #{corpId}
               AND is_lost = 0
               AND data_time = CURRENT_DATE()
             GROUP BY
                 external_user_id
                    ,user_id) AS num
    </select>
    <select id="selectAllExternalByCorpId" resultType="java.lang.Long">
        SELECT COUNT(*) FROM
            (SELECT
                 *
             FROM
                 `rm_external_statistics_num`
             WHERE
                 corp_id = #{corpId}
               AND is_lost = 0
             GROUP BY
                 external_user_id
                    ,user_id) AS num
    </select>
    <select id="selectFullPath" resultType="java.lang.String" parameterType="java.lang.String">
        select full_path from  qywx_corp_department where department_id=#{id} and corp_id=#{corpId}
        limit 1
    </select>
    <select id="selectByCorpIdAndlimitNum" resultType="java.util.Map">
        SELECT user_id, COUNT(*) AS user_count
        FROM rm_external_statistics_num
        WHERE corp_id = #{corpId}
          AND is_lost = 0
        GROUP BY user_id
        ORDER BY user_count DESC
            LIMIT #{limitNum};
    </select>
    <select id="selectByCorpIdAndUserIdListAndDays" resultType="java.util.Map">
        SELECT user_id, COUNT(*) AS user_count
        FROM rm_external_statistics_num
        WHERE corp_id = #{corpId}
        AND is_lost = 0
        AND add_time >= DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
        AND user_id IN
        <foreach collection="userIdList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        GROUP BY user_id
        ORDER BY user_count DESC

    </select>
    <select id="selectByCorpIdAndUserIdAndDays" resultType="java.util.Map">
        SELECT
            num.user_id,
            num.external_user_id,
            num.add_time,
            info.name AS external_user_name,
            info.add_way AS external_add_way,
            archives.info_value AS mobile_number,
            #{userName} AS add_user_name
        FROM
            rm_external_statistics_num AS num
                LEFT JOIN
            rm_external_info AS info ON num.external_user_id = info.external_user_id AND num.corp_id = info.corp_id AND num.user_id = info.user_id
                LEFT JOIN
            rm_external_info_field_config AS config ON info.corp_id = config.corp_id
                LEFT JOIN
            rm_external_info_archives AS archives ON config.id = archives.info_id AND archives.external_user_id = num.external_user_id
        WHERE
            num.corp_id = #{corpId}
          AND num.user_id = #{userId}
          AND config.info_name = '手机号'
          AND num.add_time >= DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
    </select>
    <select id="selectCountByCorpIdAndLabelList" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM (
                 SELECT COUNT(DISTINCT CONCAT(num.user_id, '-', num.external_user_id)) AS count
                 FROM rm_external_statistics_num AS num
                     LEFT JOIN rm_external_label AS label ON num.external_user_id = label.external_user_id AND num.corp_id = label.corp_id AND num.user_id = label.user_id
                 WHERE num.is_lost = 0
                   AND num.corp_id = #{corpId}
                   AND label.label_id IN
                    <foreach collection="labelList" item="item" open="(" close=")" separator=",">
                    #{item}
                    </foreach>
                 GROUP BY CONCAT(num.user_id, '-', num.external_user_id)
             ) AS subquery;
    </select>
    <select id="selectPhoneByExternalUserId" resultType="java.lang.String">
        SELECT rfa.info_value FROM rm_external_statistics_num AS num
                                       LEFT JOIN rm_external_info_field_config AS cfg ON num.corp_id = cfg.corp_id
                                       LEFT JOIN rm_external_info_archives AS rfa ON cfg.id = rfa.info_id
        WHERE num.corp_id = #{corpId}
          AND num.user_id = #{userId}
          AND num.external_user_id = #{externalUserId}
          AND rfa.external_user_id = #{externalUserId}
          AND cfg.info_name = "手机号"
    </select>
    <select id="queryOneByExternalUserIdAndCorpId"  resultMap="BaseResultMap">
        SELECT
            *
        FROM
            `rm_external_statistics_num`
        WHERE
            external_user_id = #{externalUserId}
          AND corp_id = #{corpId}
        ORDER BY
            add_time DESC
            LIMIT 1
    </select>
    <select id="queryResidentListByUserIdListToQunFa" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        rei.remark,
        DATE_FORMAT(rsn.add_time, '%Y-%m-%d') AS data_time,
        rsn.external_user_id,
        rsn.user_id
        FROM
        rm_external_statistics_num rsn
        LEFT JOIN rm_external_label rel on rel.external_user_id=rsn.external_user_id
        LEFT JOIN rm_external_info rei on rei.external_user_id=rsn.external_user_id AND rsn.user_id=rei.user_id
        LEFT JOIN
        (SELECT reia.external_user_id,reia.info_value FROM
        rm_external_info_archives reia
        INNER JOIN
        rm_external_info_field_config  reifc on reifc.id =reia.info_id AND  reia.corp_id=reifc.corp_id
        WHERE reifc.corp_id=#{corpId}
        AND reifc.control_name in ('姓名','手机号')
        ) s1 on s1.external_user_id=rei.external_user_id
        WHERE rsn.is_lost=0
        AND rsn.corp_id=#{corpId}
        <if test="userIds!=null and userIds!=''">
        AND rsn.user_id in  (${userIds})
        </if>
        <if test="searchValue!=null and searchValue!=''">
            AND (rei.remark like CONCAT('%',#{searchValue},'%') or s1.info_value LIKE  CONCAT('%',#{searchValue},'%') or rei.name like CONCAT('%',#{searchValue},'%'))
        </if>
        <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
            AND rsn.add_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="labelListStrIn!=null and labelListStrIn!=''">
            AND rel.label_id  in (${labelListStrIn})
        </if>
        group by rsn.user_id,rsn.external_user_id
        order by rsn.add_time  DESC
    </select>
    <insert id="insertExternalStatisticsNumBatch" parameterType="java.util.List">
        insert into rm_external_statistics_num
        (user_id, external_user_id, data_time, add_time, is_deleted_by_person, is_deleted_by_contact, is_lost, corp_id)
        values
        <foreach item="item" collection="list" separator=",">
            (#{item.userId,jdbcType=VARCHAR},
            #{item.externalUserId,jdbcType=VARCHAR},
            #{item.dataTime,jdbcType=TIMESTAMP},
            #{item.addTime},
            #{item.isDeletedByPerson,jdbcType=INTEGER},
            #{item.isDeletedByContact,jdbcType=INTEGER},
            #{item.isLost,jdbcType=INTEGER},
            #{item.corpId,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <select id="selectFriendlyRelationshipPersonUserId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
            user_id
        FROM
            rm_external_statistics_num
        WHERE
            external_user_id =#{externalUserId}
          AND corp_id = #{corpId}

    </select>

</mapper>
